{"version":3,"file":"static/js/432.097a4f1f.chunk.js","mappings":"iOAkFA,UA3EsB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAGtBG,EAAiB,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,cAAlBb,EAAIY,EAAJZ,KAAMc,EAAKF,EAALE,MACd,OAAQd,GACJ,IAAK,OACDC,EAAQa,GACR,MACJ,IAAK,QACDT,EAASS,GACT,MACJ,IAAK,WACDL,EAAYK,GAKxB,EAOMC,EAAa,WACnBd,EAAQ,IACJI,EAAS,IACTI,EAAY,GAClB,EAGE,OACKO,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACDC,UAAU,OACVC,SAhBU,SAAAR,GACdA,EAAES,iBACJ1B,GAAS2B,EAAAA,EAAAA,IAAa,CAACrB,KAAAA,EAAKI,MAAAA,EAAMI,SAAAA,KAChCO,GACJ,EAaQO,GAAI,CACAC,QAAS,OACTC,cAAe,SAClBC,WAAW,SAChB,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,SAEzCC,YAAU,EACVC,aAAa,MAAKC,SAAA,EAGPC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACjBhC,KAAK,OACCiC,MAAM,OACNnB,MAAOd,EACPkC,SAAUxB,KAEHqB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACvBhC,KAAK,QACCiC,MAAM,QACNnB,MAAOV,EACP8B,SAAUxB,KAEFqB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACxBhC,KAAK,WACCiC,MAAM,WACNnB,MAAON,EACP0B,SAAUxB,KAGhBqB,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAAQ,WAAWC,KAAK,QAAQC,KAAK,SAAQR,SAAC,YAIhE,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authRegister } from \"redux/auth/auth-operations\";\nimport { Box, Button, TextField } from \"@mui/material\";\n\n\n const RegisterPage = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // const nameInputId = nanoid();\n\n    const onHandleChange = e => {\n        const { name, value } = e.currentTarget\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'email':\n                setEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            default:\n                break;\n        }\n    };\n const onFormSubmit = e => {\n        e.preventDefault();\n      dispatch(authRegister({name,email,password}))\n        resetInput();\n    }\n\n    const resetInput = () => {\n    setName('');\n        setEmail('');\n        setPassword('');\n  };\n\n\n    return (\n         <Box\n            component=\"form\"\n            onSubmit={onFormSubmit}\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',  \n             alignItems:'center',\n        '& .MuiTextField-root': { m: 1, width: '30ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n        >\n            \n                 <TextField\n          name=\"name\"\n                label=\"Name\"\n                value={name}\n                onChange={onHandleChange}\n            />\n                       <TextField\n          name=\"email\"\n                label=\"Email\"\n                value={email}\n                onChange={onHandleChange}\n                />\n                        <TextField\n          name=\"password\"\n                label=\"Password\"\n                value={password}\n                onChange={onHandleChange}\n       \n        />\n          <Button variant=\"outlined\" size='large' type=\"submit\">LOGIN</Button> \n    </Box>\n        \n    )\n}\n\nexport default RegisterPage\n\n\n//  <Formik>\n//              <FormContacts onSubmit={onFormSubmit} >\n//             <label htmlFor={nameInputId}>\n//               Name </label>\n//             <Input\n//                         type=\"text\"\n//                         id={nameInputId}\n//                 name=\"name\"\n//                 value={name}\n//                 onChange={onHandleChange}\n//   required\n//                 />\n//                  <label htmlFor={nameInputId}>\n//              Email </label>\n//                 <Input\n//   type=\"email\"\n//                     name=\"email\"\n//                     value={email}\n//                     onChange={onHandleChange}\n\n//   required\n//                 />\n//                   <label htmlFor={nameInputId}>\n//              Password </label>\n//                 <Input\n//   type=\"text\"\n//                     name=\"password\"\n//                     value={password}\n//                     onChange={onHandleChange}\n\n//   required\n// />\n//         <button type=\"submit\" >Register</button>\n//                 </FormContacts>\n//                 </Formik>"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","onHandleChange","e","_e$currentTarget","currentTarget","value","resetInput","_jsxs","Box","component","onSubmit","preventDefault","authRegister","sx","display","flexDirection","alignItems","m","width","noValidate","autoComplete","children","_jsx","TextField","label","onChange","Button","variant","size","type"],"sourceRoot":""}